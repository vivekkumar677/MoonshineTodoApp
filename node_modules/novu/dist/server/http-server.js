"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HttpServer = void 0;
const http = require("http");
const open = require("open");
const constants_1 = require("../constants");
class HttpServer {
    async listen() {
        await (0, constants_1.setAvailablePort)();
        this.server = http.createServer();
        this.server.on('request', async (req, res) => {
            try {
                if (req.url.startsWith(constants_1.REDIRECT_ROUTE)) {
                    this.handleRedirectRequest(req, res);
                }
            }
            catch (e) {
                console.error(e);
            }
        });
        this.server.listen(await (0, constants_1.getServerPort)(), constants_1.SERVER_HOST);
    }
    getAddress() {
        const response = this.server.address();
        return `http://${constants_1.SERVER_HOST}:${response.port}`;
    }
    redirectResponse() {
        return new Promise((resolve) => {
            const interval = setInterval(() => {
                if (this.token) {
                    clearInterval(interval);
                    resolve(this.token);
                }
            }, 300);
        });
    }
    close() {
        this.server.close();
    }
    redirectSuccessDashboard(url) {
        if (this.authResponseHandle) {
            this.authResponseHandle
                .writeHead(301, {
                Location: url,
            })
                .end();
            this.authResponseHandle = null;
        }
        else {
            open(url);
        }
    }
    handleRedirectRequest(req, res) {
        this.token = new URLSearchParams(req.url.slice(constants_1.REDIRECT_ROUTE.length)).get('token');
        this.authResponseHandle = res;
    }
}
exports.HttpServer = HttpServer;
//# sourceMappingURL=http-server.js.map